spring:
  application:
    name: scholar-ai
  security:
    user:
      name: ${USER_NAME:your_username_here}
      password: ${USER_PASSWORD:your_password_here}
  app:
    jwtSecret: ${JWT_SECRET:your_jwt_secret_here}
    jwtExpirationMs: ${JWT_EXPIRATION_MS:86400000}

  datasource:
    url: jdbc:postgresql://localhost:5432/coreDB
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 3
      maximum-pool-size: 10

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
        globally_quoted_identifiers: true
        hbm2ddl.auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

server:
  port: 8080
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false

management:
  info:
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus,metrics"
      base-path: "/actuator"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    tags:
      application: "${spring.application.name}"
  tracing:
    enabled: false
    sampling:
      probability: 1

springdoc:
  api-docs:
    enabled: true
  show-actuator: true
  use-management-port: false

resilience4j:
  ratelimiter:
    configs:
      default:
        limit-for-period: 300
        limit-refresh-period: 1m
        timeout-duration: 0s
    instances:
      standard-api:
        base-config: default
      test-error:
        limit-for-period: 30
        limit-refresh-period: 10s
        timeout-duration: 0s
      actuator:
        limit-for-period: 60
        limit-refresh-period: 1m
        timeout-duration: 0s

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,https://scholarAI.tech,https://*.vercel.app}