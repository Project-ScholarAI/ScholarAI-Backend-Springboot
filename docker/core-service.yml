services:
  postgres:
    image: 'postgres:17-alpine'
    container_name: core-db
    restart: always
    environment:
      POSTGRES_USER: ${CORE_DB_USER}
      POSTGRES_PASSWORD: ${CORE_DB_PASSWORD}
      POSTGRES_DB: coreDB
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CORE_DB_USER} -d coreDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholar-network

  paper-db:
    image: 'postgres:17-alpine'
    container_name: paper-db
    restart: always
    environment:
      POSTGRES_USER: ${PAPER_DB_USER}
      POSTGRES_PASSWORD: ${PAPER_DB_PASSWORD}
      POSTGRES_DB: paperDB
    volumes:
      - paper-db-data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PAPER_DB_USER} -d paperDB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholar-network

  rabbitmq:
    image: 'rabbitmq:4.1.0-management-alpine'
    container_name: core-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 30s
      timeout: 30s
      retries: 10
    networks:
      - scholar-network

  redis:
    image: 'redis:8.0.1-alpine'
    container_name: core-redis
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scholar-network

volumes:
  db-data:
  redis-data:
  paper-db-data:

networks:
  scholar-network:
    driver: bridge
